//axi requests kerbin soc -> hyperbus

ax.ax_id    = 10'h010;
ax.ax_addr  = 32'h0000_0000;
ax.ax_size  = 3'h1;
ax.ax_burst = axi_pkg::BURST_INCR;
ax.ax_len   = 8'h07;
#MASTER_NAME#.send_ar(ax);            //adapt me


repeat (8) begin
    r.r_id      = 10'h010;
    #MASTER_NAME#.recv_r(r);
    $display("%d - %4h", $time, r.r_data);
end


ax.ax_id    = 10'h010;
ax.ax_addr  = 32'h0000_0000;
ax.ax_size  = 3'h1;
ax.ax_burst = axi_pkg::BURST_INCR;
ax.ax_len   = 8'h07;
#MASTER_NAME#.send_aw(ax);         

w.w_data    = 16'h0001;
w.w_strb    = '1;
w.w_last    = '0;
$display("%d - %4h", $time, r.r_data);
#MASTER_NAME#.send_w(w);

w.w_data    = 16'hbeef;
w.w_strb    = '1;
w.w_last    = '0;
$display("%d - %4h", $time, r.r_data);
#MASTER_NAME#.send_w(w);

w.w_data    = 16'hcafe;
w.w_strb    = '1;
w.w_last    = '0;
$display("%d - %4h", $time, r.r_data);
#MASTER_NAME#.send_w(w);

w.w_data    = 16'hface;
w.w_strb    = '1;
w.w_last    = '0;
$display("%d - %4h", $time, r.r_data);
#MASTER_NAME#.send_w(w);

#MASTER_NAME#.recv_b(b);


ax.ax_id    = 10'h010;
ax.ax_addr  = 32'h0000_0000;
ax.ax_size  = 3'h1;
ax.ax_burst = axi_pkg::BURST_INCR;
ax.ax_len   = 8'h07;
#MASTER_NAME#.send_ar(ax);       


repeat (8) begin
    r.r_id      = 10'h010;
    #MASTER_NAME#.recv_r(r);
    $display("%d - %4h", $time, r.r_data);
end